<!-- standard is the version that we can define the way we want (uploaders->photo_uploader.rb) -->

<% @posts.each do |post| %>

	<div class="card mt-3 post">
		
    <!-- username/user avatar/delete options -->	
		<div class="card-header d-flex align-items-center">
			<%=  link_to user_path(post.user), class: "no-text-decoration" do %>
				<%= image_tag avatar_url(post.user), class: "post-author-icon" %>
			<% end %>

			<%= link_to user_path(post.user), class: "normal-color no-text-decoration", title: post.user.name do%>
				<strong><%= post.user.name %></strong>
			<% end %>
    <!-- show the delete post icon only when signed in user is the owner of the post. is_belongs_to is a method defined in post.rb model file -->
			<% if post.is_belongs_to? current_user %>
		        <%= link_to post_path(post), method: :delete, class: "ml-auto delete-post-icon mx-0 my-auto" do %>
		          <i class="far fa-trash-alt" aria-hidden="true"></i>
		        <% end %>
	      	<% end %>
		</div>


<!----------------------- DISPLAY PHOTOS USING BOOTSTRAP MODAL------to stop auto-slide: data-interval="false"---------------------------------------- -->
<%= render "photos", {post: post}%>


<!------------------------------------------------------LIKE/COMMENT/BOOKMARK----------------------------------------------------------------- -->

	<div class="card-body">
		
		<div class="row-actions" style="display: flex; margin-top: 3%;margin-bottom: 3%;">
          
          <!--change the icon of love react from red to normal if a like_id already exists and vice-versa! We are passing the required data in params, {}, to the file which is rendered here-->
          <div id="like-icon-post-<%= post.id.to_s %>">
          <%= render "like_icon", {is_liked: post.is_liked(current_user), post: post} %>
        </div>
 
			<a href="#", class="core-sprite comment hide-text">Comment</a>
			<a href="#", class="core-sprite bookmark hide-text ml-auto">Bookmark</a>
		</div>

		<!-- styling the text of likes' length and users who like it! We are passing post.likes as likes, in params to the file which is rendered here -->
		<div id="like-text-post-<%= post.id.to_s %>">
        <%= render "like_text", {likes: post.likes} %>
        </div>
		
		<div>
			<span><strong><%= post.user.name %></strong></span>
			<span><%= post.content %></span>
		</div>
		<%= link_to time_ago_in_words(post.created_at).upcase + " AGO ", post_path(post), class: "light-color post-time no-text-decoration"%>
		<hr>
		<div class="row actions">
			<form action="#" class="w-100">
				<div>
					<textarea class="form-control comment-input border-0" placeholder="Add a comment ..." rows="1"></textarea>
				</div>
			</form>
		</div>
	</div>

</div>

<% end %>